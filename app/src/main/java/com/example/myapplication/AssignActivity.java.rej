diff a/app/src/main/java/com/example/myapplication/AssignActivity.java b/app/src/main/java/com/example/myapplication/AssignActivity.java	(rejected hunks)
@@ -1,60 +1,91 @@
 package com.example.myapplication;
-
-import android.app.PendingIntent;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.nfc.NdefMessage;
-import android.nfc.NdefRecord;
-import android.nfc.NfcAdapter;
-import android.nfc.Tag;
-import android.nfc.tech.Ndef;
 import android.os.Bundle;
-import android.os.Parcelable;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.Button;
-import android.widget.NumberPicker;
-import android.widget.Toast;
-import android.widget.Toolbar;
 
-import java.io.IOException;
+import java.util.ArrayList;
 
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
+import androidx.fragment.app.Fragment;
+import androidx.fragment.app.FragmentManager;
+import androidx.fragment.app.FragmentStatePagerAdapter;
+import androidx.viewpager.widget.ViewPager;
+
+public class CheckActivity extends AppCompatActivity {
 
-public class AssignActivity extends AppCompatActivity {
+    ViewPager pager;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_assign);
+        setContentView(R.layout.activity_check);
 
-        NumberPicker hpicker = (NumberPicker) findViewById(R.id.hpicker);
-        hpicker.setMinValue(0);
-        hpicker.setMaxValue(2);
-        hpicker.setWrapSelectorWheel(false);
+//        final Spinner spinner = (Spinner) findViewById(R.id.Spinner);
+//        String[] str = getResources().getStringArray(R.array.location);
+//
+//        final ArrayAdapter<String> adapter= new ArrayAdapter<String>(this, R.layout.spinner_item, str);
+//        adapter.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item);
+//        spinner.setAdapter(adapter);
+//
+//        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
+//            @Override
+//            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
+//
+//            }
+//
+//            @Override
+//            public void onNothingSelected(AdapterView<?> parent) {
+//
+//            }
+//        });
 
-        NumberPicker mpicker = (NumberPicker) findViewById(R.id.mpicker);
-        mpicker.setMinValue(0);
-        mpicker.setMaxValue(6);
-        mpicker.setDisplayedValues(new String[]{"0", "10", "20", "30", "40", "50", "60"});
-        mpicker.setWrapSelectorWheel(false);
+        pager = (ViewPager) findViewById(R.id.pager);
+        PagerAdapter pagerAdapter = new PagerAdapter(getSupportFragmentManager());
 
-        Button positive = (Button) findViewById(R.id.positiveButton);
-        positive.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
+        Fragment_snapzone snapzone = new Fragment_snapzone();
+        pagerAdapter.addItem(snapzone);
 
-            }
-        });
+        Fragment_forest forest = new Fragment_forest();
+        pagerAdapter.addItem(forest);
+
+        Fragment_library library = new Fragment_library();
+        pagerAdapter.addItem(library);
+
+        pager.setAdapter(pagerAdapter);
+    }
+
+    class PagerAdapter extends FragmentStatePagerAdapter {
+        ArrayList<Fragment> items = new ArrayList<Fragment>();
+
+        public PagerAdapter(@NonNull FragmentManager fm) {
+            super(fm);
+        }
+
+        @NonNull
+        @Override
+        public Fragment getItem(int position) {
+            return items.get(position);
+        }
+
+        @Override
+        public int getCount() {
+            return items.size();
+        }
+
+        public void addItem(Fragment item) {
+            items.add(item);
+        }
 
-        Button negative = (Button) findViewById(R.id.negativeButton);
-        negative.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                finish();
+        @Nullable
+        @Override
+        public CharSequence getPageTitle(int position) {
+            if(position == 0) {
+                return "snapzone";
+            } else if (position == 1) {
+                return "forest";
+            } else {
+                return "library";
             }
-        });
+        }
     }
 }
